@using Microsoft.EntityFrameworkCore

@if (displayConformation)
{
    <div class="modal-backdrop show"></div>

    <div class="modal fade show" id="exampleModal" tabindex="-1" role="dialog"
     aria-labelledby="exampleModal" aria-hidden="true" style="display:block;  margin-top: 300px">

        <div class="modal-dialog" role="document">

            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title">Изменение исполнителя</h5>
                    <button @onclick="onCancel" type="button" class="close"><span aria-hidden="true">&times;</span> </button>
                </div>

                <div class="modal-body">
                    <EditForm Model="order" OnSub>
                        <InputSelect @bind-Value="order.Employee">
                            @foreach (var item in Employees)
                        {
                            <option>@item.Surname</option>
                        }
                        </InputSelect>
                    </EditForm>

                </div>       
                
                <div class="modal-footer">
                    <button @onclick="onConfirm" type="button" class="btn btn-danger">Изменить</button>
                    <button @onclick="onCancel" type="button" class="btn btn-primary">Отмена</button>
                </div>

            </div>

        </div>

    </div>
}

@code {

    //[Parameter] public string ModalTitle { get; set; } = "Подтверждение";

    //[Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback onConfirm { get; set; }
    [Parameter] public EventCallback onCancel { get; set; }
    [Parameter] public List<Employee> Employees { get; set; }
    // public Employee CurrentEmployee { get; set; }
    [Parameter] public  Order order { get; set; }
    protected override async Task OnInitializedAsync()
    {
        
        //
        //Employees = await context.Employees.ToListAsync();
        
    }


    bool displayConformation = false;

    public void Hide() => displayConformation = false;
    public void Show() => displayConformation = true;

    public void DisplayConformation()
    {
        displayConformation = displayConformation == true ? false : true;
    }
}
